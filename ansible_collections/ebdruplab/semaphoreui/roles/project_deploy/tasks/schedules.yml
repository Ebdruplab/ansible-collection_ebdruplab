---
# - name: Validate schedules
#   ansible.builtin.assert:
#     that:
#       - project_deploy_config.schedules is defined
#       - item.value.name is defined
#       - item.value.cron_format is defined
#       - (item.value.template_id is defined) or (item.value.template_name is defined)
#     quiet: true
#     fail_msg: "Each schedule needs name, cron_format, and template_id or template_name."
#   loop: "{{ project_deploy_config.schedules | default({}) | dict2items }}"
#   loop_control:
#     label: "{{ item.value.name | default('unnamed-schedule') }}"
#   when: project_deploy_config.schedules is defined

- name: 'Create project schedules'
  ebdruplab.semaphoreui.project_schedule_create:
    host: "{{ project_deploy_semaphore_host }}"
    port: "{{ project_deploy_semaphore_port }}"
    api_token: "{{ project_deploy_semaphore_api_token | default(omit) }}"
    session_cookie: "{{ login_result.session_cookie | default(omit) }}"
    project_id: "{{ current_project_id }}"
    schedule:
      name: "{{ item.value.name }}"
      cron_format: "{{ item.value.cron_format }}"
      template_id: >-
        {{ (item.value.template_id | int)
           if (item.value.template_id is defined)
           else (created_templates_by_name[item.value.template_name].id | int) }}
      active: "{{ item.value.active | default(false) }}"
  loop: "{{ project_deploy_config.schedules | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.value.name }}"
  register: created_schedules_result
  when: project_deploy_config.schedules is defined

- name: 'Set created schedules fact'
  ansible.builtin.set_fact:
    created_schedules_by_name: "{{ created_schedules_by_name | default({}) | combine({ item.item.value.name: item.schedule }) }}"
  loop: "{{ created_schedules_result.results | default([]) }}"
  loop_control:
    label: "{{ item.item.value.name | default('unnamed-schedule') }}"
  when:
    - project_deploy_config.schedules is defined
    - created_schedules_result is defined
