---
- name: "Fetch system users"
  ebdruplab.semaphoreui.user_list:
    host: "{{ project_deploy_semaphore_host }}"
    port: "{{ project_deploy_semaphore_port }}"
    session_cookie: "{{ login_result.session_cookie }}"
  register: _all_users
  when: project_deploy_config.users_access is defined
  tags:
    - project_deploy
    - users
    - list

- name: "Map username -> id"
  ansible.builtin.set_fact:
    _uname_to_id: "{{ dict(_all_users.users | map(attribute='username') | zip(_all_users.users | map(attribute='id'))) }}"
    _role_display_map:
      owner: "Owner"
      manager: "Manager"
      task_runner: "Task Runner"
      guest: "Guest"
  when: project_deploy_config.users_access is defined
  tags:
    - project_deploy
    - users
    - facts

- name: "Fetch current project users"
  ebdruplab.semaphoreui.project_user_list:
    host: "{{ project_deploy_semaphore_host }}"
    port: "{{ project_deploy_semaphore_port }}"
    session_cookie: "{{ login_result.session_cookie }}"
    project_id: "{{ current_project_id }}"
    sort: name
    order: asc
  register: _proj_users
  when: project_deploy_config.users_access is defined
  tags:
    - project_deploy
    - users
    - list

- name: "Build linked user_id -> current_role_key map"
  ansible.builtin.set_fact:
    _uid_to_role_key: >-
      {{
        dict(
          (_proj_users.users | default([]) | map(attribute='id') | list)
          |
          zip(
            _proj_users.users | default([])
            | map(attribute='role') | map('string')
            | map('lower') | map('regex_replace','\\s+','_')
          )
        )
      }}
  when: project_deploy_config.users_access is defined
  tags:
    - project_deploy
    - users
    - facts

- name: "Notify missing usernames (skipping create/link)"
  ansible.builtin.debug:
    msg: "User '{{ item.username }}' not found on server; skipping."
  loop: "{{ project_deploy_config.users_access | default([]) }}"
  when:
    - project_deploy_config.users_access is defined
    - item.username not in _uname_to_id
  tags:
    - project_deploy
    - users
    - debug

- name: "Link users not yet in project"
  ebdruplab.semaphoreui.project_user_create:
    host: "{{ project_deploy_semaphore_host }}"
    port: "{{ project_deploy_semaphore_port }}"
    session_cookie: "{{ login_result.session_cookie }}"
    project_id: "{{ current_project_id }}"
    user:
      user_id: "{{ _uname_to_id[item.username] }}"
      role: >-
        {{
          _role_display_map[
            (item.role | string | lower | regex_replace('\\s+','_'))
          ] | default(item.role)
        }}
  loop: "{{ project_deploy_config.users_access | default([]) }}"
  loop_control:
    label: "{{ item.username }}"
  when:
    - project_deploy_config.users_access is defined
    - item.username in _uname_to_id
    - _uname_to_id[item.username] not in (_uid_to_role_key.keys() | list)
  tags:
    - project_deploy
    - users
    - create

- name: "Update role for already-linked users (only when different)"
  ebdruplab.semaphoreui.project_user_update:
    host: "{{ project_deploy_semaphore_host }}"
    port: "{{ project_deploy_semaphore_port }}"
    session_cookie: "{{ login_result.session_cookie }}"
    project_id: "{{ current_project_id }}"
    user_id: "{{ _uname_to_id[item.username] }}"
    user:
      role: >-
        {{
          _role_display_map[
            (item.role | string | lower | regex_replace('\\s+','_'))
          ] | default(item.role)
        }}
  loop: "{{ project_deploy_config.users_access | default([]) }}"
  loop_control:
    label: "{{ item.username }}"
  vars:
    _desired_key: "{{ (item.role | string | lower | regex_replace('\\s+','_')) }}"
    _current_key: "{{ _uid_to_role_key.get(_uname_to_id[item.username]) }}"
  when:
    - project_deploy_config.users_access is defined
    - item.username in _uname_to_id
    - _uname_to_id[item.username] in _uid_to_role_key
    - _desired_key != _current_key
  tags:
    - project_deploy
    - users
    - update

- name: "Compute desired user_id set for pruning"
  ansible.builtin.set_fact:
    _desired_user_ids: >-
      {{
        project_deploy_config.users_access | default([])
        | map(attribute='username')
        | select('in', (_uname_to_id.keys() | list))
        | map('extract', _uname_to_id)
        | list
      }}
  when: project_deploy_config.users_access is defined
  tags:
    - project_deploy
    - users
    - facts

- name: "Debug prune candidates (users)"
  when: project_deploy_debug | bool
  ansible.builtin.debug:
    msg:
      current_user_ids: "{{ (_proj_users.users | default([])) | map(attribute='id') | list }}"
      desired_user_ids: "{{ _desired_user_ids | default([]) }}"
      delete_ids: >-
        {{
          (_proj_users.users | default([]) | map(attribute='id') | list)
          | difference(_desired_user_ids | default([]))
        }}
  tags:
    - project_deploy
    - users
    - debug

- name: "Delete project users not in desired list"
  ebdruplab.semaphoreui.project_user_delete:
    host: "{{ project_deploy_semaphore_host }}"
    port: "{{ project_deploy_semaphore_port }}"
    session_cookie: "{{ login_result.session_cookie }}"
    project_id: "{{ current_project_id }}"
    user_id: "{{ item.id }}"
  loop: "{{ _proj_users.users | default([]) }}"
  loop_control:
    label: "{{ item.id }}"
  when:
    - project_deploy_variable_delete | default(false) | bool
    - item.id not in (_desired_user_ids | default([]))
  tags:
    - project_deploy
    - users
    - prune
